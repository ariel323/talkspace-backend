🧠 Foro Backend — API RESTful con Spring Boot
Este proyecto consiste en la implementación de una API RESTful desarrollada con Spring Boot, como parte del challenge de Alura Latam. La aplicación permite gestionar un foro de discusión técnica, facilitando el registro y autenticación de usuarios mediante JWT, así como la administración de tópicos relacionados con diversas tecnologías.

🚀 Funcionalidades principales
👤 Gestión de usuarios
Registro de nuevos usuarios con almacenamiento seguro de contraseñas (hashing).

Autenticación y autorización mediante JSON Web Tokens (JWT).

🗨️ Manejo de tópicos
Funcionalidad completa de CRUD: creación, lectura, actualización y eliminación.

Paginación y filtrado de tópicos por título o autor.

🗃️ Persistencia de datos
Integración con MySQL utilizando Spring Data JPA.

Manejo seguro de credenciales y variables sensibles a través de variables de entorno.

🔐 Seguridad y robustez
Protección de endpoints mediante Spring Security y JWT.

Respuestas estandarizadas en formato JSON para errores de validación y excepciones.

📦 Principales endpoints
Método	Ruta	Descripción
POST	/auth/register	Registro de usuario (retorna token JWT)
POST	/auth/login	Inicio de sesión (retorna token JWT)
GET	/auth/topicos/buscar?titulo=...&autor=...	Búsqueda de tópicos por título o autor
GET	/topicos	Listado paginado de tópicos
POST	/topicos	Crear un nuevo tópico
PUT	/topicos/{id}	Actualizar un tópico existente
DELETE	/topicos/{id}	Eliminar un tópico

📌 Todos los endpoints, excepto los de autenticación (/auth/register y /auth/login), requieren un token JWT en la cabecera de autorización:

Authorization: Bearer <tu_token>
💬 Ejemplo de tópico registrado

{
  "titulo": "¿Cómo usar JWT en Spring Boot?",
  "mensaje": "¿Alguien puede explicar cómo implementar autenticación JWT en un proyecto Spring Boot?",
  "autor": "ariel",
  "curso": "Java",
  "estado": "ABIERTO",
  "fechaCreacion": "2025-07-13T19:45:39.941064"
}
🧩 Estructura del proyecto
├── controller/     → Controladores REST
├── model/          → Entidades JPA
├── repository/     → Interfaces de acceso a datos
├── security/       → Configuración de seguridad y utilidades JWT
├── exception/      → Manejo global de excepciones
├── dto/            → Objetos de transferencia de datos
🛠️ Tecnologías utilizadas
Java 17

Spring Boot 3.x

Spring Data JPA

Spring Security + JWT

MySQL

Maven

▶️ Cómo ejecutar el proyecto
Configura las variables de entorno necesarias (credenciales de base de datos, claves JWT, etc.).

Ejecuta el proyecto con Maven:
mvn spring-boot:run
O desde tu entorno de desarrollo preferido (IDE).

Prueba los endpoints utilizando herramientas como Postman o Insomnia.

👨‍💻 Autor del proyecto
Desarrollado por ariel323 como parte del challenge de Alura Latam.
